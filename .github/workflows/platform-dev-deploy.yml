name: Dev Deploy PR Event Dispatcher

on:
  pull_request:
    types: [opened, synchronize, closed]
  issue_comment:
    types: [created]

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Check if should dispatch
        id: check
        if: >-
          github.event.issue.pull_request &&
          github.event.comment.body == '!deploy' &&
          (
            github.event.comment.user.login == github.event.issue.user.login ||
            github.event.comment.author_association == 'OWNER' ||
            github.event.comment.author_association == 'MEMBER' ||
            github.event.comment.author_association == 'COLLABORATOR'
          )
        run: |
          echo "should_dispatch=true" >> $GITHUB_OUTPUT
          
      - name: Dispatch PR Event
        if: steps.check.outputs.should_dispatch == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: Significant-Gravitas/AutoGPT_cloud_infrastructure
          event-type: pr-event
          client-payload: |
            {
              "action": "deploy",
              "pr_number": "${{ github.event.pull_request.number }}",
              "pr_title": "${{ github.event.pull_request.title }}",
              "pr_state": "${{ github.event.pull_request.state }}",
              "repo": "${{ github.repository }}"
            }
            
      - name: Dispatch PR Closure Event
        if: github.event.action == 'closed' && contains(github.event.pull_request.comments.*.body, '!deploy')
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: Significant-Gravitas/AutoGPT_cloud_infrastructure
          event-type: pr-event
          client-payload: |
            {
              "action": "undeploy",
              "pr_number": "${{ github.event.pull_request.number }}",
              "pr_title": "${{ github.event.pull_request.title }}",
              "pr_state": "${{ github.event.pull_request.state }}",
              "repo": "${{ github.repository }}"
            }
