name: AutoGPTs smoke test CI

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'
  push:
    branches: [ master, development, ci-test* ]
    paths:
      - '.github/workflows/autogpts-ci.yml'
      - 'autogpts/**'
      - 'benchmark/**'
      - 'run'
      - 'cli.py'
      - 'setup.py'
      - '!**/*.md'
  pull_request:
    branches: [ master, development, release-* ]
    paths:
      - '.github/workflows/autogpts-ci.yml'
      - 'autogpts/**'
      - 'benchmark/**'
      - 'run'
      - 'cli.py'
      - 'setup.py'
      - '!**/*.md'

env:
  TELEMETRY_ENVIRONMENT: autogpt-ci
  TELEMETRY_OPT_IN: ${{ github.event_name == 'push' && github.ref_name == 'master' }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent-name: [ autogpt, forge ]
      fail-fast: false
    timeout-minutes: 20
    env:
      min-python-version: '3.10'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Python ${{ env.min-python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.min-python-version }}

      - name: Install Poetry
        working-directory: ./autogpts/${{ matrix.agent-name }}/
        run: |
          curl -sSL https://install.python-poetry.org | python -

      - name: Run regression tests
        run: |
          ./run agent start ${{ matrix.agent-name }}
          cd autogpts/${{ matrix.agent-name }}
          poetry run agbenchmark --mock --test=BasicRetrieval --test=Battleship --test=WebArenaTask_0
          poetry run agbenchmark --test=WriteFile
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AGENT_NAME: ${{ matrix.agent-name }}
          REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
          HELICONE_CACHE_ENABLED: false
          HELICONE_PROPERTY_AGENT: ${{ matrix.agent-name }}
          REPORTS_FOLDER: ${{ format('../../reports/{0}', matrix.agent-name) }}
