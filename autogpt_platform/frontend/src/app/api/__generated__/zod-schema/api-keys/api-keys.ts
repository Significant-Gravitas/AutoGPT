/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AutoGPT Agent Server
 * This server is used to execute agents that are created by the AutoGPT system.
 * OpenAPI spec version: 0.1
 */
import { z as zod } from "zod";

/**
 * List all API keys for the user
 * @summary List user API keys
 */
export const getV1ListUserApiKeysResponse = zod
  .array(
    zod.object({
      id: zod.string(),
      name: zod.string(),
      prefix: zod.string(),
      postfix: zod.string(),
      status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
      permissions: zod.array(
        zod.enum([
          "EXECUTE_GRAPH",
          "READ_GRAPH",
          "EXECUTE_BLOCK",
          "READ_BLOCK",
        ]),
      ),
      created_at: zod.string().datetime({}),
      last_used_at: zod.string().datetime({}).or(zod.null()),
      revoked_at: zod.string().datetime({}).or(zod.null()),
      description: zod.string().or(zod.null()),
      user_id: zod.string(),
    }),
  )
  .or(zod.record(zod.string(), zod.string()));

/**
 * Create a new API key
 * @summary Create new API key
 */
export const postV1CreateNewApiKeyBody = zod.object({
  name: zod.string(),
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
  description: zod.string().or(zod.null()).optional(),
});

export const postV1CreateNewApiKeyResponse = zod.object({
  api_key: zod.object({
    id: zod.string(),
    name: zod.string(),
    prefix: zod.string(),
    postfix: zod.string(),
    status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
    permissions: zod.array(
      zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
    ),
    created_at: zod.string().datetime({}),
    last_used_at: zod.string().datetime({}).or(zod.null()),
    revoked_at: zod.string().datetime({}).or(zod.null()),
    description: zod.string().or(zod.null()),
    user_id: zod.string(),
  }),
  plain_text_key: zod.string(),
});

/**
 * Get a specific API key
 * @summary Get specific API key
 */
export const getV1GetSpecificApiKeyParams = zod.object({
  key_id: zod.string(),
});

export const getV1GetSpecificApiKeyResponse = zod.object({
  id: zod.string(),
  name: zod.string(),
  prefix: zod.string(),
  postfix: zod.string(),
  status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
  created_at: zod.string().datetime({}),
  last_used_at: zod.string().datetime({}).or(zod.null()),
  revoked_at: zod.string().datetime({}).or(zod.null()),
  description: zod.string().or(zod.null()),
  user_id: zod.string(),
});

/**
 * Revoke an API key
 * @summary Revoke API key
 */
export const deleteV1RevokeApiKeyParams = zod.object({
  key_id: zod.string(),
});

export const deleteV1RevokeApiKeyResponse = zod.object({
  id: zod.string(),
  name: zod.string(),
  prefix: zod.string(),
  postfix: zod.string(),
  status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
  created_at: zod.string().datetime({}),
  last_used_at: zod.string().datetime({}).or(zod.null()),
  revoked_at: zod.string().datetime({}).or(zod.null()),
  description: zod.string().or(zod.null()),
  user_id: zod.string(),
});

/**
 * Suspend an API key
 * @summary Suspend API key
 */
export const postV1SuspendApiKeyParams = zod.object({
  key_id: zod.string(),
});

export const postV1SuspendApiKeyResponse = zod.object({
  id: zod.string(),
  name: zod.string(),
  prefix: zod.string(),
  postfix: zod.string(),
  status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
  created_at: zod.string().datetime({}),
  last_used_at: zod.string().datetime({}).or(zod.null()),
  revoked_at: zod.string().datetime({}).or(zod.null()),
  description: zod.string().or(zod.null()),
  user_id: zod.string(),
});

/**
 * Update API key permissions
 * @summary Update key permissions
 */
export const putV1UpdateKeyPermissionsParams = zod.object({
  key_id: zod.string(),
});

export const putV1UpdateKeyPermissionsBody = zod.object({
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
});

export const putV1UpdateKeyPermissionsResponse = zod.object({
  id: zod.string(),
  name: zod.string(),
  prefix: zod.string(),
  postfix: zod.string(),
  status: zod.enum(["ACTIVE", "REVOKED", "SUSPENDED"]),
  permissions: zod.array(
    zod.enum(["EXECUTE_GRAPH", "READ_GRAPH", "EXECUTE_BLOCK", "READ_BLOCK"]),
  ),
  created_at: zod.string().datetime({}),
  last_used_at: zod.string().datetime({}).or(zod.null()),
  revoked_at: zod.string().datetime({}).or(zod.null()),
  description: zod.string().or(zod.null()),
  user_id: zod.string(),
});
